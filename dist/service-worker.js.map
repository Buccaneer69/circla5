{"mappings":"AAAA,MAAM,gBAAgB;AACtB,MAAM,aAAa,CAAC,cAAc,EAAE,cAAc,CAAC;AAEnD,MAAM,cAAc;IAClB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,KAAK,gBAAgB,CAAC,WAAW,CAAC,QAAU;IACxC,KAAK,WAAW;IAEhB,MAAM,SAAS,CACb,OAAO,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC,QAAU;QACtC,QAAQ,GAAG,CAAC;QACZ,OAAO,MAAM,MAAM,CAAC;IACtB;AAEN;AAGA,KAAK,gBAAgB,CAAC,SAAS,CAAC,QAAU;IACtC,kDAAkD;IAClD,IAAI,MAAM,OAAO,CAAC,WAAW,KAAK,YAAY,MAAM,OAAO,CAAC,IAAI,KAAK,QAAQ;QAC3E,MAAM,WAAW,CAAC,MAAM,MAAM,OAAO;QACrC;IACF,CAAC;IAED,+CAA+C;IAC/C,MAAM,wBAAwB,MAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;IAE7D,gDAAgD;IAChD,MAAM,4BAA4B,IAAI,QAAQ,uBAAuB,MAAM,OAAO;IAElF,MAAM,WAAW,CACf,OAAO,KAAK,CAAC,2BAA2B,IAAI,CAAC,CAAC,WAAa;QACzD,IAAI,UACF,OAAO;QAET,OAAO,MAAM,MAAM,OAAO;IAC5B;AAEJ;AAGF,KAAK,gBAAgB,CAAC,YAAY,CAAC,QAAU;IAC3C,MAAM,iBAAiB;QAAC;KAAW;IACnC,MAAM,SAAS,CACb,OAAO,IAAI,GAAG,IAAI,CAAC,CAAC,aAAe;QACjC,OAAO,QAAQ,GAAG,CAChB,WAAW,GAAG,CAAC,CAAC,YAAc;YAC5B,IAAI,eAAe,OAAO,CAAC,eAAe,IACxC,OAAO,OAAO,MAAM,CAAC;QAEzB;IAEJ;AAEJ","sources":["public/service-worker.js"],"sourcesContent":["const CACHE_VERSION = 'v1.0.0';\r\nconst CACHE_NAME = `my-cache-name-${CACHE_VERSION}`;\r\n\r\nconst urlsToCache = [\r\n  '/',\r\n  '/index.html',\r\n  '/logo-192x192.png',\r\n  '/logo-512x512.png',\r\n  '/manifest.json',\r\n  '/img/6.svg',\r\n  '/img/bergkross.jpg',\r\n  '/img/bk-1.png',\r\n  '/img/bs-1.png',\r\n  '/img/c-1.png',\r\n  '/img/gardsgrus.jpg',\r\n  '/img/lastvaxlare_large.png',\r\n  '/img/lastvaxlare_medium.png',\r\n  '/img/lastvaxlare_small.png',\r\n  '/img/lastvaxlare_xl.png',\r\n  '/img/liftdumper_big.png',\r\n  '/img/liftdumper_medium.png',\r\n  '/img/liftdumper_small.png',\r\n  '/img/logo.png',\r\n  '/img/m-1.png',\r\n  '/img/makadam-8-16-sackad-butik.jpg',\r\n  '/img/Makadam-Flis-m-Bio-Lowres.jpg',\r\n  '/img/rorgravsgrus.jpg',\r\n  '/img/stenmjol.jpg',\r\n  '/img/Tackbark-Lowres.jpg',\r\n  '/img/Toppdress-Lowres.jpg',\r\n  '/img/Vaxtjord_A.jpg',\r\n];\r\n\r\nself.addEventListener('install', (event) => {\r\n    self.skipWaiting();\r\n  \r\n    event.waitUntil(\r\n      caches.open(CACHE_NAME).then((cache) => {\r\n        console.log('Opened cache');\r\n        return cache.addAll(urlsToCache);\r\n      })\r\n    );\r\n});\r\n  \r\n\r\nself.addEventListener('fetch', (event) => {\r\n    // Check if the request is for a JavaScript module\r\n    if (event.request.destination === 'script' && event.request.mode === 'cors') {\r\n      event.respondWith(fetch(event.request));\r\n      return;\r\n    }\r\n  \r\n    // Remove query parameters from the request URL\r\n    const urlWithoutQueryParams = event.request.url.split('?')[0];\r\n  \r\n    // Create a new request without query parameters\r\n    const requestWithoutQueryParams = new Request(urlWithoutQueryParams, event.request);\r\n  \r\n    event.respondWith(\r\n      caches.match(requestWithoutQueryParams).then((response) => {\r\n        if (response) {\r\n          return response;\r\n        }\r\n        return fetch(event.request);\r\n      })\r\n    );\r\n  });\r\n  \r\n\r\nself.addEventListener('activate', (event) => {\r\n  const cacheWhitelist = [CACHE_NAME];\r\n  event.waitUntil(\r\n    caches.keys().then((cacheNames) => {\r\n      return Promise.all(\r\n        cacheNames.map((cacheName) => {\r\n          if (cacheWhitelist.indexOf(cacheName) === -1) {\r\n            return caches.delete(cacheName);\r\n          }\r\n        })\r\n      );\r\n    })\r\n  );\r\n});\r\n"],"names":[],"version":3,"file":"service-worker.js.map","sourceRoot":"/__parcel_source_root/"}